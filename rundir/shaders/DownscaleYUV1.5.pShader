/********************************************************************************
 Copyright (C) 2012 Hugh Bailey <obs.jim@gmail.com>

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
********************************************************************************/


//1.5 downscale requires kind of a lot of sampling, more sampling than there are pixels on the base texture

uniform Texture2D diffuseTexture;
uniform float2 baseDimensionI;

SamplerState textureSampler
{
    AddressU  = Clamp;
    AddressV  = Clamp;
    Filter    = Linear;
};

struct VertData
{
    float4 pos      : SV_Position;
    float2 texCoord : TexCoord0;
};

float4 main(VertData input) : SV_Target
{
    float2 texAdjust = (input.texCoord-0.5)*1.5;
    float2 floorVal = floor(texAdjust+0.001);
    float2 offset = (texAdjust-floorVal);

    float2x2 pixelMat = {1.0, 1.0, 1.0, 1.0};

    if(offset.x > 0.4)
        pixelMat._11_21 = 0.5;
    else
        pixelMat._12_22 = 0.5;

    if(offset.y > 0.4)
        pixelMat._11_12 *= 0.5;
    else
        pixelMat._21_22 *= 0.5;

    float4 rgba;
    rgba  = diffuseTexture.Sample(textureSampler, (floorVal+float2(0.5, 0.5)) * baseDimensionI) * pixelMat._11;
    rgba += diffuseTexture.Sample(textureSampler, (floorVal+float2(1.5, 0.5)) * baseDimensionI) * pixelMat._12;
    rgba += diffuseTexture.Sample(textureSampler, (floorVal+float2(0.5, 1.5)) * baseDimensionI) * pixelMat._21;
    rgba += diffuseTexture.Sample(textureSampler, (floorVal+float2(1.5, 1.5)) * baseDimensionI) * pixelMat._22;
    rgba /= 2.25;

    const float4x4 yuvMat  = {0.257, -0.148,  0.439, 0.0,
                              0.504, -0.291, -0.368, 0.0,
                              0.098,  0.439, -0.071, 0.0,
                              0.0625, 0.50,   0.50,  1.0};

    //a nice quick colorspace conversion
    float4 yuvx = mul(float4(rgba.rgb, 1.0), yuvMat);
    return float4(saturate(yuvx.zxy), rgba.a);
}
